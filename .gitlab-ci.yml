---
include:
  - remote: 'https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.98/terraform-toolkit.yml'
  - remote: 'https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.98/git-toolkit.yml'
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.98/gitlab-toolkit.yml"

get-latest-terraform:
  extends: .get-latest-terraform

check-formatting:
  extends: .check-formatting

validate:
  extends: .validate-terraform
  variables:
    ENVIRONMENTS: examples/complete examples/fargate-spot

miquido-ci-schema-validation:
  extends: .miquido-ci-schema-validation

bump-tag:
  extends: .bump_minor_tag

.bump_minor_tag:
  tags:
    - docker
    - miquido
  stage: .post
  image: frolvlad/alpine-bash
  variables:
    GITLAB_TOKEN: "<ENTER_VAR>"
  before_script:
    - apk add git
  script:
    - TXT_RED="\e[31m"
    - |
      if [ "$GITLAB_TOKEN" = "<ENTER_VAR>" ]; then
        echo -e "${TXT_RED}Fatal: Missing GITLAB_TOKEN. \
      Please setup GITLAB_TOKEN variable with token with write_repository rights"
        exit 1
      fi
    - git tag -l | xargs git tag -d
    - git fetch origin 'refs/tags/*:refs/tags/*'
    - VERSION=$(git tag --sort=committerdate | { grep "[0-9]*.[0-9]*.[0-9]*$" || true; }| tail -1)
    - git remote rm $CI_PIPELINE_ID &> /dev/null || true;
    - |
      git remote add $CI_PIPELINE_ID \
      https://token:$GITLAB_TOKEN@$CI_SERVER_URL/$CI_PROJECT_PATH.git
    - |
      if [[ "$VERSION" == "" ]]; then
        echo "VERSION is unset"
        VERSION="1.0.0"
      else
        echo "VERSION is set to '$VERSION'"
        VERSION=$(echo "$VERSION" | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
      fi
    - git tag "$VERSION"
    - git push $CI_PIPELINE_ID $VERSION
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
